{"version":3,"file":"static/js/26.7f9ab17a.chunk.js","mappings":"qSAEMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,QACVC,eAAe,KAINC,EAAa,mCAAG,4FACT,MACC,MAFQ,SAGJP,EAASQ,IAAT,oBAFL,MAEK,YADJ,QAFQ,uBAGnBC,EAHmB,EAGnBA,KAHmB,kBAKpBA,GALoB,2CAAH,qDAQbC,EAAY,mCAAG,WAAMC,GAAN,yFACHX,EAASQ,IAAT,iBAAuBG,IADpB,uBAClBF,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZG,EAAW,mCAAG,WAAOC,EAAaC,GAApB,yFACFd,EAASQ,IAAT,gBAA8B,CACnDL,OAAQ,CACNY,MAAOF,EACPC,KAAAA,KAJqB,uBACjBL,EADiB,EACjBA,KADiB,kBAOlBA,GAPkB,2CAAH,wDAUXO,EAAY,mCAAG,WAAML,GAAN,yFACHX,EAASQ,IAAT,iBAAuBG,EAAvB,aADG,uBAClBF,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZQ,EAAc,mCAAG,WAAON,EAAIG,GAAX,yFACLd,EAASQ,IAAT,iBAAuBG,EAAvB,YAAqC,CAC1DR,OAAQ,CACNW,KAAAA,KAHwB,uBACpBL,EADoB,EACpBA,KADoB,kBAMrBA,GANqB,2CAAH,uD,qICtC3B,GAAgB,YAAc,sCAAsC,eAAiB,yCAAyC,kBAAoB,4CAA4C,iBAAmB,2CAA2C,gBAAkB,0CAA0C,YAAc,uC,SCkDtU,EA/C0B,SAAC,GAAqB,IAAnBS,EAAkB,EAAlBA,YAGrBC,EAAQ,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAaE,KAC5B,gBAAGT,EAAH,EAAGA,GAAIU,EAAP,EAAOA,eAAgBC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,WAAYC,EAA3C,EAA2CA,QAA3C,OACE,gBAAIC,UAAWC,EAAAA,YAAf,WACE,iBAAKD,UAAWC,EAAAA,gBAAhB,WACE,gBACED,UAAWC,EAAAA,kBACXC,MAAO,GACPC,IACEP,EAAeQ,aACfR,EAAeQ,YAAYC,SAAS,SAChCT,EAAeQ,YAAYE,UAAU,GAZlCC,uCAeTC,IAAI,MAEN,cAAGR,UAAWC,EAAAA,aAAd,SAAiCJ,QAEnC,iBAAKG,UAAWC,EAAAA,eAAhB,WACE,cAAGD,UAAWC,EAAAA,iBAAd,SAAqCH,EAAWW,MAAM,EAAG,OACzD,uBAAIV,SAjB6Bb,EADvC,IAwBF,OAAO,eAAIc,UAAWC,EAAAA,YAAf,SAAiCP,GACzC,ECHD,EAxBsB,WACpB,OAAsCgB,EAAAA,EAAAA,YAAtC,eAAOjB,EAAP,KAAoBkB,EAApB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,mCAAG,gHAELvB,EAAAA,EAAAA,IAAeoB,GAFV,OAElB5B,EAFkB,OAIxB2B,EAAe3B,EAAKgC,SAJI,gDAKfC,EALe,KAKfA,SACTC,QAAQC,IAAIF,EAASjC,KAAKoC,SANF,yDAAH,qDASzBL,GACD,GAAE,CAACH,IAE2B,KAAb,OAAXnB,QAAW,IAAXA,OAAA,EAAAA,EAAa4B,SAClB,qEAEA,SAAC,EAAD,CAAmB5B,YAAaA,GAEnC,C","sources":["api/api.jsx","webpack://react-homework-template/./src/components/ReviewsMovieCard/ReviewsMovieCard.module.css?03d7","components/ReviewsMovieCard/ReviewsMovieCard.jsx","components/ReviewsMovies/ReviewsMovies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '28eb3a3356c833fb933dbb7817e92ba6',\n    language: 'en-US',\n    include_adult: false,\n  },\n});\n\nexport const trendingMovie = async () => {\n  const mediaType = 'all';\n  const timeWindow = 'day';\n  const { data } = await instance.get(`/trending/${mediaType}/${timeWindow}`);\n\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const searchMovie = async (searchQuery, page) => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: {\n      query: searchQuery,\n      page,\n    },\n  });\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getMovieReview = async (id, page) => {\n  const { data } = await instance.get(`/movie/${id}/reviews`, {\n    params: {\n      page,\n    },\n  });\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"reviewsItem\":\"ReviewsMovieCard_reviewsItem__3GLhG\",\"contentWrapper\":\"ReviewsMovieCard_contentWrapper__NAAx0\",\"reviewsUserAvatar\":\"ReviewsMovieCard_reviewsUserAvatar__+9HyQ\",\"reviewsCreatedAt\":\"ReviewsMovieCard_reviewsCreatedAt__RhhTx\",\"reviewsUserInfo\":\"ReviewsMovieCard_reviewsUserInfo__yeoUz\",\"reviewsList\":\"ReviewsMovieCard_reviewsList__KCXO6\"};","import PropTypes from 'prop-types';\n\nimport css from './ReviewsMovieCard.module.css';\n\nconst ReviewsMoviesCard = ({ reviewMovie }) => {\n  const defaultImg = process.env.PUBLIC_URL + '/avatar.jpg ';\n\n  const elements = reviewMovie?.map(\n    ({ id, author_details, author, created_at, content }) => (\n      <li className={css.reviewsItem} key={id}>\n        <div className={css.reviewsUserInfo}>\n          <img\n            className={css.reviewsUserAvatar}\n            width={80}\n            src={\n              author_details.avatar_path &&\n              author_details.avatar_path.includes('https')\n                ? author_details.avatar_path.substring(1)\n                : defaultImg\n            }\n            alt=\"\"\n          />\n          <p className={css.reviewsAutor}>{author}</p>\n        </div>\n        <div className={css.contentWrapper}>\n          <p className={css.reviewsCreatedAt}>{created_at.slice(0, 10)}</p>\n          <p>{content}</p>\n        </div>\n      </li>\n    )\n  );\n\n  return <ul className={css.reviewsList}>{elements}</ul>;\n};\n\nReviewsMoviesCard.propTypes = {\n  reviewMovie: PropTypes.arrayOf(\n    PropTypes.shape({\n      author: PropTypes.string,\n      created_at: PropTypes.string,\n      content: PropTypes.string,\n      author_details: PropTypes.shape({\n        avatar_path: PropTypes.string,\n        name: PropTypes.string,\n        rating: PropTypes.number,\n        username: PropTypes.string,\n      }),\n    })\n  ),\n};\n\nexport default ReviewsMoviesCard;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieReview } from 'api/api';\nimport ReviewsMoviesCard from '../ReviewsMovieCard/ReviewsMovieCard';\n\nconst ReviewsMovies = () => {\n  const [reviewMovie, setReviewMovie] = useState();\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchGetMovieReview = async () => {\n      try {\n        const data = await getMovieReview(movieId);\n\n        setReviewMovie(data.results);\n      } catch ({ response }) {\n        console.log(response.data.message);\n      }\n    };\n    fetchGetMovieReview();\n  }, [movieId]);\n\n  return reviewMovie?.length === 0 ? (\n    <p>We don't have any reviews for this movie</p>\n  ) : (\n    <ReviewsMoviesCard reviewMovie={reviewMovie} />\n  );\n};\n\nexport default ReviewsMovies;\n"],"names":["instance","axios","baseURL","params","api_key","language","include_adult","trendingMovie","get","data","getMovieById","id","searchMovie","searchQuery","page","query","getMovieCast","getMovieReview","reviewMovie","elements","map","author_details","author","created_at","content","className","css","width","src","avatar_path","includes","substring","process","alt","slice","useState","setReviewMovie","movieId","useParams","useEffect","fetchGetMovieReview","results","response","console","log","message","length"],"sourceRoot":""}